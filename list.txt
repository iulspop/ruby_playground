On line X, the `puts` method call with local variable `X` passed in as an argument outputs `’X’`, because
1)

On line X, local variable `X` is initialized to X `X`.
On line X, the `X` method is called with `X` passed in as an argument.
On line X, the method parameter `X` is assigned to the X object `X` references.

On line X, the `loop` method invocation with a `do..end` block passed in as an argument creates an inner scope.

On line X, the `do..end` block takes the parameter `X`

Local variables initialized in the outer scope are available in an inner scope created by a method invocation with a block.

Local variables initialized in the inner scope created by a method invocation with a block are not available an outer scope.

Peer scopes do not conflict.